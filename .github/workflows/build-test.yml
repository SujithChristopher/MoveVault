name: Build Test

on:
  push:
    branches: [ main, develop ]
    tags-ignore:
      - 'v*'  # Don't run on version tags (release workflow handles those)
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Manual trigger

jobs:
  test-build:
    name: Test Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Test Python syntax
      run: |
        python -m py_compile main.py
        python -m py_compile version.py
        python -c "import core.autoupdate; print('Autoupdate module imports successfully')"
        python -c "from ui.main_window import MoveVaultUploader; print('Main window module imports successfully')"

    - name: Create test credentials
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
      run: |
        python -c "
        import json
        import os
        credentials = {
            'aws_access_key_id': os.environ['AWS_ACCESS_KEY_ID'],
            'aws_secret_access_key': os.environ['AWS_SECRET_ACCESS_KEY'],
            'aws_bucket_name': os.environ['AWS_BUCKET_NAME'],
            'aws_region': os.environ['AWS_REGION'],
            'base_folder': 'Ranipet'
        }
        with open('.credentials', 'w') as f:
            json.dump(credentials, f)
        "

    - name: Verify credentials file
      run: python verify_credentials.py

    - name: Test build process (Ranipet)
      run: python build.py --institution Ranipet

    - name: Verify executable created
      shell: bash
      run: |
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          ls -la dist/MoveVault_Ranipet.exe
        else
          ls -la dist/MoveVault_Ranipet
        fi

    - name: Upload test build
      uses: actions/upload-artifact@v4
      with:
        name: test-build-${{ matrix.os }}
        path: dist/
        retention-days: 7