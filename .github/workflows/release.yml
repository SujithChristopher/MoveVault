name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v0.1.0
  workflow_dispatch:  # Manual trigger

permissions:
  contents: write
  actions: read

jobs:
  build:
    name: Build ${{ matrix.institution }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        institution: [Ranipet, Manipal, Ludhiana, CMC]
        os: [windows-latest, macos-latest]
        include:
          - os: windows-latest
            platform: Windows
            ext: .exe
          - os: macos-latest
            platform: macOS
            ext: ""

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create embedded credentials
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        INSTITUTION: ${{ matrix.institution }}
      run: |
        python -c "
        import json
        import os
        credentials = {
            'aws_access_key_id': os.environ['AWS_ACCESS_KEY_ID'],
            'aws_secret_access_key': os.environ['AWS_SECRET_ACCESS_KEY'],
            'aws_bucket_name': os.environ['AWS_BUCKET_NAME'],
            'aws_region': os.environ['AWS_REGION'],
            'base_folder': os.environ['INSTITUTION']
        }
        with open('.credentials', 'w') as f:
            json.dump(credentials, f)
        print('Credentials file created successfully')
        "

    - name: Verify credentials file
      run: python verify_credentials.py

    - name: Build executable
      run: python build.py --institution ${{ matrix.institution }}

    - name: Create release archive (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        mkdir release
        copy dist\MoveVault_${{ matrix.institution }}.exe release\
        copy README.md release\ 2>nul || echo "README not found"
        powershell Compress-Archive -Path release\* -DestinationPath MoveVault_${{ matrix.institution }}-Windows-x64.zip
      shell: cmd

    - name: Create release archive (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        mkdir release
        cp -R dist/MoveVault_${{ matrix.institution }} release/
        cp README.md release/ 2>/dev/null || echo "README not found"
        tar -czf MoveVault_${{ matrix.institution }}-macOS-x64.tar.gz -C release .

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: MoveVault_${{ matrix.institution }}-${{ matrix.platform }}
        path: |
          MoveVault_${{ matrix.institution }}-Windows-x64.zip
          MoveVault_${{ matrix.institution }}-macOS-x64.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts/

    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref_name }}
        name: MoveVault v${{ steps.get_version.outputs.VERSION }}
        body: |
          ## MoveVault v${{ steps.get_version.outputs.VERSION }}

          ### What's New
          - Multi-institution support with dedicated binaries
          - Auto-update functionality
          - Cross-platform support (Windows & macOS)
          - Enhanced UI with institution-specific branding
          - Improved error handling and logging

          ### Institution-Specific Downloads
          Choose the binary for your institution:

          **Ranipet Medical Center:**
          - Windows: `MoveVault_Ranipet-Windows-x64.zip`
          - macOS: `MoveVault_Ranipet-macOS-x64.tar.gz`

          **Manipal Hospital:**
          - Windows: `MoveVault_Manipal-Windows-x64.zip`
          - macOS: `MoveVault_Manipal-macOS-x64.tar.gz`

          **Ludhiana Medical Center:**
          - Windows: `MoveVault_Ludhiana-Windows-x64.zip`
          - macOS: `MoveVault_Ludhiana-macOS-x64.tar.gz`

          **Christian Medical College (CMC):**
          - Windows: `MoveVault_CMC-Windows-x64.zip`
          - macOS: `MoveVault_CMC-macOS-x64.tar.gz`

          ### Installation
          1. Download the appropriate file for your institution and operating system
          2. Extract the zip/tar.gz file
          3. Run the executable

          ### System Requirements
          - Windows 10+ or macOS 10.14+
          - Internet connection for S3 uploads and auto-updates
          - AWS S3 credentials configured

          For installation instructions and usage, see the [README](https://github.com/${{ github.repository }}/blob/main/README.md).
        files: ./artifacts/**/*
        draft: false
        prerelease: false